{"version":3,"file":"static/js/948.c2361f8e.chunk.js","mappings":"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","sources":["components/LinkViewProfile/LinkViewProfile.jsx","../node_modules/@iconscout/react-unicons/icons/uil-search.js","webpack://med-doc-front/./src/pages/DoctorMain/Colleagues/Colleagues.module.css?1aac","pages/DoctorMain/Colleagues/Colleagues.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst LinkViewProfile = ({ children, id }) => {\n    return (\n        <Link to={`${id}`}>\n            <Button variant=\"outlined\" color=\"primary\">\n                {children}\n            </Button>\n        </Link>\n    );\n};\n\nexport default LinkViewProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilSearch = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z'\n  }));\n};\n\nUilSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilSearch.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilSearch;","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Colleagues_filter__XOBn8\",\"filterSelect\":\"Colleagues_filterSelect__lVwJa\"};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { UilSearch } from '@iconscout/react-unicons';\nimport { Autocomplete, IconButton, Input, TextField } from '@mui/material';\nimport LinkViewProfile from 'components/LinkViewProfile/LinkViewProfile';\nimport { ProfileBlockDoctore } from 'components/ProfileBlockDoctore/ProfileBlockDoctore';\nimport UsersList from 'components/UsersList/UsersList';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsersForRole } from 'redux/info/operation';\nimport { selectAllDoctors } from 'redux/info/selectors';\nimport css from './Colleagues.module.css';\nimport {\n  paginationUsers,\n  windowSizePagination,\n  PagePagination,\n} from 'components/PagePagination/PagePagination';\n\nconst specializations = [\n  'Show All',\n  'Ophthalmologist',\n  'Surgeon',\n  'Therapist',\n  'Neurologist',\n  'Gynecologist',\n  'Endocrinologist',\n  'Psychiatrist',\n  'Psychotherapist',\n  'Otolaryngologist',\n  'Oncologist',\n];\nconst categories = ['Show All', 'The First', 'The Second', 'Higher'];\n\nconst autocompleteStyles = {\n  '&.MuiAutocomplete-hasPopupIcon.MuiAutocomplete-hasClearIcon.MuiAutocomplete-root .MuiOutlinedInput-root':\n    {\n      borderRadius: '16px',\n      padding: '14px 18px',\n    },\n  '&.MuiAutocomplete-root .MuiOutlinedInput-root .MuiAutocomplete-input ': {\n    padding: '0px',\n    fontWeight: '500',\n    fontSize: '16px',\n    lineHeight: '1.5',\n    color: '#111111',\n    width: '100%',\n  },\n};\n\nconst Colleagues = () => {\n  const [allDoctors, setAllDoctors] = useState([]);\n  const [filteredByName, setFilteredByName] = useState([]);\n  const [specialization, setSpecialization] = useState('Show All');\n  const [category, setCategory] = useState('Show All');\n\n  const [pagination, setPagination] = useState([]);\n  const [limit, setLimit] = useState();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [page, setPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const doctors = useSelector(selectAllDoctors) || [];\n\n  useEffect(() => {\n    dispatch(getAllUsersForRole('Doctor'));\n  }, []);\n\n  const handleFilterName = e => {\n    const inputValue = e.target.value.trim();\n    const filtered = allDoctors.filter(doctor =>\n      doctor.name.toLowerCase().startsWith(inputValue.toLowerCase())\n    );\n    setFilteredByName(filtered);\n    const result = paginationUsers(filtered, limit);\n    setPagination(result);\n  };\n\n  const handleFilterSpecialization = (event, value) => {\n    setSpecialization(value);\n  };\n\n  const handleFilterCategory = (event, value) => {\n    setCategory(value);\n  };\n\n  //pagination\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n    windowSizePagination(window.innerWidth, setLimit);\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    windowSizePagination(windowWidth, setLimit);\n\n    const result = paginationUsers(filteredByName, limit);\n    setPagination(result);\n  }, [windowWidth]);\n\n  useEffect(() => {\n    let filtered = doctors;\n\n    if (specialization && specialization !== 'Show All') {\n      filtered = filtered.filter(\n        doctor => doctor.specialization === specialization\n      );\n    }\n\n    if (category && category !== 'Show All') {\n      filtered = filtered.filter(doctor => doctor.category === category);\n    }\n\n    const result = paginationUsers(filtered, limit);\n    setPagination(result);\n\n    setAllDoctors(filtered);\n    setFilteredByName(filtered);\n  }, [doctors, specialization, category]);\n\n  const handlePageOnVisits = data => {\n    setPage(data);\n  };\n\n  let numberOfPaginationButton = 1;\n  if (pagination) {\n    numberOfPaginationButton = pagination.length;\n  }\n\n  return (\n    <>\n      <div className={css.filter}>\n        <div>\n          <Input\n            sx={{\n              minWidth: '270px',\n            }}\n            variant=\"filter\"\n            color=\"primary\"\n            disableUnderline\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={handleFilterName}\n            endAdornment={\n              <IconButton disableRipple sx={{ padding: '0px' }}>\n                <UilSearch />\n              </IconButton>\n            }\n          />\n        </div>\n        <div className={css.filterSelect}>\n          <ul style={{ display: 'flex' }}>\n            <li>\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo\"\n                options={specializations}\n                sx={{\n                  ...autocompleteStyles,\n                  maxWidth: '220px',\n                  marginRight: { xs: '8px', md: '16px' },\n                }}\n                value={specialization}\n                onChange={handleFilterSpecialization}\n                renderInput={params => <TextField {...params} />}\n              />\n            </li>\n            <li>\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo\"\n                options={categories}\n                sx={{ ...autocompleteStyles, maxWidth: '184px' }}\n                value={category}\n                onChange={handleFilterCategory}\n                renderInput={params => <TextField {...params} />}\n              />\n            </li>\n          </ul>\n        </div>\n      </div>\n      <UsersList listOfUsers={pagination[page - 1] || filteredByName}>\n        <ProfileBlockDoctore>\n          <LinkViewProfile>view profile</LinkViewProfile>\n        </ProfileBlockDoctore>\n      </UsersList>\n      <PagePagination\n        numberOfBtnsOnVisitsHistory={numberOfPaginationButton}\n        handlePageOnVisits={handlePageOnVisits}\n      />\n    </>\n  );\n};\n\nexport default Colleagues;\n"],"names":["_ref","children","id","_jsx","Link","to","concat","Button","variant","color","UilSearch","props","size","otherProps","_objectWithoutProperties","_excluded","React","_objectSpread","xmlns","width","height","viewBox","fill","d","propTypes","PropTypes","defaultProps","specializations","categories","autocompleteStyles","borderRadius","padding","fontWeight","fontSize","lineHeight","_useState","useState","_useState2","_slicedToArray","allDoctors","setAllDoctors","_useState3","_useState4","filteredByName","setFilteredByName","_useState5","_useState6","specialization","setSpecialization","_useState7","_useState8","category","setCategory","_useState9","_useState10","pagination","setPagination","_useState11","_useState12","limit","setLimit","_useState13","window","innerWidth","_useState14","windowWidth","setWindowWidth","_useState15","_useState16","page","setPage","dispatch","useDispatch","doctors","useSelector","selectAllDoctors","useEffect","getAllUsersForRole","handleResize","windowSizePagination","addEventListener","removeEventListener","result","paginationUsers","filtered","filter","doctor","numberOfPaginationButton","length","_jsxs","_Fragment","className","css","Input","sx","minWidth","disableUnderline","type","placeholder","onChange","e","inputValue","target","value","trim","name","toLowerCase","startsWith","endAdornment","IconButton","disableRipple","style","display","Autocomplete","disablePortal","options","maxWidth","marginRight","xs","md","event","renderInput","params","TextField","UsersList","listOfUsers","ProfileBlockDoctore","LinkViewProfile","PagePagination","numberOfBtnsOnVisitsHistory","handlePageOnVisits","data"],"sourceRoot":""}