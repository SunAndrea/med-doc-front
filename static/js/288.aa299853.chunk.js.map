{"version":3,"file":"static/js/288.aa299853.chunk.js","mappings":"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","sources":["webpack://med-doc-front/./src/pages/DoctorMain/VisitHistory/VisitHistory.module.css?71fb","pages/DoctorMain/VisitHistory/VisitHistory.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imgWrapper\":\"VisitHistory_imgWrapper__dSjy3\",\"photo\":\"VisitHistory_photo__iVzcG\",\"lable\":\"VisitHistory_lable__WqvPw\",\"infoWrapp\":\"VisitHistory_infoWrapp__NZI+r\",\"patientName\":\"VisitHistory_patientName__h0U2e\",\"visitDate\":\"VisitHistory_visitDate__dkVSx\",\"textInformations\":\"VisitHistory_textInformations__v8IT-\"};","import { Box, Button, Divider, Grid, List, ListItem } from '@mui/material';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getAllVisits } from 'redux/visits/operation';\nimport { selectAllVisits } from 'redux/visits/selectors';\nimport { PagePagination } from '../../../components/PagePagination/PagePagination';\nimport css from './VisitHistory.module.css';\n\nconst gridStyles = {\n  marginLeft: '0',\n  marginTop: '0',\n  alignItems: { md: 'center' },\n  '& .MuiGrid-item': {\n    paddingLeft: '0',\n    paddingTop: '0',\n    marginLeft: '0',\n    marginTop: '0',\n  },\n  '& > .MuiGrid-item': {\n    paddingLeft: '0',\n    paddingTop: '0',\n    marginLeft: '0',\n    marginTop: '0',\n  },\n  '& .visitInfo': {\n    flex: '1',\n  },\n  '& .btnWrapp': {\n    textAlign: { md: 'right' },\n    marginRight: { md: '16px', lg: '8px' },\n  },\n};\n\nconst buttonStyle = {\n  padding: { xs: '14px 28px', md: '16px 40px' },\n  fontSize: { md: '14px' },\n  lineHeight: { xs: '1.17', md: '1.4' },\n};\n\nconst limit = 10;\n\nconst VisitHistory = () => {\n  const dispatch = useDispatch();\n  const visits = useSelector(selectAllVisits);\n  const [page, setPage] = useState(1);\n  const [allVisits, setAllVisits] = useState(null);\n  const location = useLocation();\n  const previousPath = location.pathname;\n\n  useEffect(() => {\n    dispatch(getAllVisits({ page, limit }));\n  }, [dispatch, page]);\n\n  useEffect(() => {\n    async function fetchVisits() {\n      const { data } = await axios.get(`/visits`);\n      setAllVisits(data);\n    }\n    fetchVisits();\n  }, []);\n\n  const handlePageOnVisits = data => {\n    setPage(data);\n  };\n\n  let numberOfPaginationButton = 0;\n  if (allVisits) {\n    numberOfPaginationButton = Math.ceil(allVisits.length / limit);\n  }\n\n  const handleClick = id => {\n    const clickedVisit = allVisits.filter(visit => visit._id === id);\n    localStorage.setItem(`visitId`, JSON.stringify(clickedVisit[0]._id));\n    localStorage.setItem('clickedVisit', JSON.stringify(clickedVisit[0]));\n  };\n  return (\n    <section className={css.section}>\n      <List\n        sx={{\n          width: '100%',\n          bgcolor: '#FAFAFA',\n          padding: { xs: '32px 16px', lg: '32px' },\n          marginBottom: { xs: '20px', md: '32px' },\n        }}\n      >\n        {visits.map(({ patient, date, _id }, index) => {\n          return (\n            <div key={_id}>\n              <ListItem\n                sx={{\n                  marginBottom: { xs: '20px', md: '16px' },\n                  padding: '0px',\n                }}\n              >\n                <Box sx={{ flexGrow: 1 }}>\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      ...gridStyles,\n                      flexWrap: { xs: 'nowrap' },\n                      alignItems: { md: 'center' },\n                    }}\n                  >\n                    <Grid item sx={{ ...gridStyles }}>\n                      <div className={css.imgWrapper}>\n                        <img\n                          src={patient.avatarURL}\n                          alt=\"avatar\"\n                          className={css.photo}\n                        />\n                      </div>\n                    </Grid>\n                    <Grid item xs={11} sx={gridStyles}>\n                      <Grid\n                        container\n                        spacing={3}\n                        sx={{ ...gridStyles, width: { md: '100%' } }}\n                      >\n                        <Grid item xs={12} md={3} lg={6} sx={gridStyles}>\n                          <div>\n                            <span className={css.lable}>Name</span>\n                            <p className={css.patientName}>{patient.name}</p>\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={5} lg={3} sx={{ ...gridStyles }}>\n                          <div className={`${css.visitInfo} visitInfo`}>\n                            <div className={css.infoWrapp}>\n                              <span className={css.lable}>Last visit</span>\n                              <p className={css.visitDate}>\n                                {moment(date).format('MMMM DD/MM/YYYY')}\n                              </p>\n                            </div>\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} md={4} lg={3} sx={gridStyles}>\n                          <div className={`${css.btnWrapp} btnWrapp`}>\n                            <Link\n                              to={{\n                                pathname: `/doctor/patients-list/${patient._id}`,\n                              }}\n                              state={{ previousPath }}\n                            >\n                              <Button\n                                variant=\"outlined\"\n                                sx={buttonStyle}\n                                onClick={() => handleClick(_id)}\n                              >\n                                view profile\n                              </Button>\n                            </Link>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </ListItem>\n              <Divider\n                sx={{\n                  width: '100%',\n                  marginBottom: index !== visits.length - 1 ? '32px' : '0px',\n                  borderBottom: '1px solid rgba(17, 17, 17, 0.1)',\n                }}\n              />\n            </div>\n          );\n        })}\n      </List>\n      <PagePagination\n        numberOfBtnsOnVisitsHistory={numberOfPaginationButton}\n        handlePageOnVisits={handlePageOnVisits}\n      />\n    </section>\n  );\n};\n\nexport default VisitHistory;\n"],"names":["gridStyles","marginLeft","marginTop","alignItems","md","paddingLeft","paddingTop","flex","textAlign","marginRight","lg","buttonStyle","padding","xs","fontSize","lineHeight","dispatch","useDispatch","visits","useSelector","selectAllVisits","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","allVisits","setAllVisits","previousPath","useLocation","pathname","useEffect","getAllVisits","limit","_fetchVisits","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","stop","apply","arguments","fetchVisits","numberOfPaginationButton","Math","ceil","length","_jsxs","className","css","section","children","_jsx","List","sx","width","bgcolor","marginBottom","map","_ref","index","patient","date","_id","ListItem","Box","flexGrow","Grid","container","spacing","_objectSpread","flexWrap","item","imgWrapper","src","avatarURL","alt","photo","lable","patientName","name","concat","visitInfo","infoWrapp","visitDate","moment","format","btnWrapp","Link","to","state","Button","variant","onClick","id","clickedVisit","filter","visit","localStorage","setItem","JSON","stringify","handleClick","Divider","borderBottom","PagePagination","numberOfBtnsOnVisitsHistory","handlePageOnVisits"],"sourceRoot":""}