{"version":3,"file":"static/js/288.4c31993f.chunk.js","mappings":"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","sources":["webpack://med-doc-front/./src/pages/DoctorMain/VisitHistory/VisitHistory.module.css?71fb","pages/DoctorMain/VisitHistory/VisitHistory.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imgWrapper\":\"VisitHistory_imgWrapper__dSjy3\",\"photo\":\"VisitHistory_photo__iVzcG\",\"lable\":\"VisitHistory_lable__WqvPw\",\"infoWrapp\":\"VisitHistory_infoWrapp__NZI+r\",\"patientName\":\"VisitHistory_patientName__h0U2e\",\"visitDate\":\"VisitHistory_visitDate__dkVSx\",\"textInformations\":\"VisitHistory_textInformations__v8IT-\"};","import { Box, Button, Divider, Grid, List, ListItem } from '@mui/material';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getAllVisits } from 'redux/visits/operation';\nimport { selectAllVisits } from 'redux/visits/selectors';\nimport { PagePagination } from '../../../components/PagePagination/PagePagination';\nimport css from './VisitHistory.module.css';\n\nconst gridStyles = {\n    marginLeft: '0',\n    marginTop: '0',\n    alignItems: { md: 'center' },\n    '& .MuiGrid-item': {\n        paddingLeft: '0',\n        paddingTop: '0',\n        marginLeft: '0',\n        marginTop: '0',\n    },\n    '& > .MuiGrid-item': {\n        paddingLeft: '0',\n        paddingTop: '0',\n        marginLeft: '0',\n        marginTop: '0',\n    },\n    '& .visitInfo': {\n        flex: '1',\n    },\n    '& .btnWrapp': {\n        textAlign: { md: 'right' },\n        marginRight: { md: '16px', lg: '8px' },\n    },\n};\n\nconst buttonStyle = {\n    padding: { xs: '14px 28px', md: '16px 40px' },\n    fontSize: { md: '14px' },\n    lineHeight: { xs: '1.17', md: '1.4' },\n};\n\nconst limit = 10;\n\nconst VisitHistory = () => {\n    const dispatch = useDispatch();\n    const visits = useSelector(selectAllVisits);\n    const [page, setPage] = useState(1);\n    const [allVisits, setAllVisits] = useState(null);\n\n    useEffect(() => {\n        dispatch(getAllVisits({ page, limit }));\n    }, [dispatch, page]);\n\n    useEffect(() => {\n        async function fetchVisits() {\n            const { data } = await axios.get(`/visits`);\n            setAllVisits(data);\n        }\n        fetchVisits();\n    }, []);\n\n    const handlePageOnVisits = data => {\n        setPage(data);\n    };\n\n    let numberOfPaginationButton = 0;\n    if (allVisits) {\n        numberOfPaginationButton = Math.ceil(allVisits.length / limit);\n    }\n\n    const handleClick = id => {\n        const clickedVisit = allVisits.filter(visit => visit._id === id);\n        localStorage.setItem('clickedVisit', JSON.stringify(clickedVisit[0]));\n    };\n    return (\n        <section className={css.section}>\n            <List\n                sx={{\n                    width: '100%',\n                    bgcolor: '#FAFAFA',\n                    padding: { xs: '32px 16px', lg: '32px' },\n                    marginBottom: { xs: '20px', md: '32px' },\n                }}\n            >\n                {visits.map(({ patient, date, _id }, index) => {\n                    return (\n                        <div key={_id}>\n                            <ListItem sx={{ marginBottom: { xs: '20px', md: '16px' }, padding: '0px' }}>\n                                <Box sx={{ flexGrow: 1 }}>\n                                    <Grid\n                                        container\n                                        spacing={2}\n                                        sx={{ ...gridStyles, flexWrap: { xs: 'nowrap' }, alignItems: { md: 'center' } }}\n                                    >\n                                        <Grid item sx={{ ...gridStyles }}>\n                                            <div className={css.imgWrapper}>\n                                                <img src={patient.avatarURL} alt=\"avatar\" className={css.photo} />\n                                            </div>\n                                        </Grid>\n                                        <Grid item xs={11} sx={gridStyles}>\n                                            <Grid container spacing={3} sx={{ ...gridStyles, width: { md: '100%' } }}>\n                                                <Grid item xs={12} md={3} lg={6} sx={gridStyles}>\n                                                    <div>\n                                                        <span className={css.lable}>Name</span>\n                                                        <p className={css.patientName}>{patient.name}</p>\n                                                    </div>\n                                                </Grid>\n                                                <Grid item xs={12} md={5} lg={3} sx={{ ...gridStyles }}>\n                                                    <div className={`${css.visitInfo} visitInfo`}>\n                                                        <div className={css.infoWrapp}>\n                                                            <span className={css.lable}>Last visit</span>\n                                                            <p className={css.visitDate}>\n                                                                {moment(date).format('MMMM DD/MM/YYYY')}\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                </Grid>\n                                                <Grid item xs={12} md={4} lg={3} sx={gridStyles}>\n                                                    <div className={`${css.btnWrapp} btnWrapp`}>\n                                                        <Link to={`/doctor/patients-list/${patient._id}`}>\n                                                            <Button\n                                                                variant=\"outlined\"\n                                                                sx={buttonStyle}\n                                                                onClick={() => handleClick(_id)}\n                                                            >\n                                                                view profile\n                                                            </Button>\n                                                        </Link>\n                                                    </div>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </ListItem>\n                            <Divider\n                                sx={{\n                                    width: '100%',\n                                    marginBottom: index !== visits.length - 1 ? '32px' : '0px',\n                                    borderBottom: '1px solid rgba(17, 17, 17, 0.1)',\n                                }}\n                            />\n                        </div>\n                    );\n                })}\n            </List>\n            <PagePagination\n                numberOfBtnsOnVisitsHistory={numberOfPaginationButton}\n                handlePageOnVisits={handlePageOnVisits}\n            />\n        </section>\n    );\n};\n\nexport default VisitHistory;\n"],"names":["gridStyles","marginLeft","marginTop","alignItems","md","paddingLeft","paddingTop","flex","textAlign","marginRight","lg","buttonStyle","padding","xs","fontSize","lineHeight","dispatch","useDispatch","visits","useSelector","selectAllVisits","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","allVisits","setAllVisits","useEffect","getAllVisits","limit","_fetchVisits","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","stop","apply","arguments","fetchVisits","numberOfPaginationButton","Math","ceil","length","_jsxs","className","css","section","children","_jsx","List","sx","width","bgcolor","marginBottom","map","_ref","index","patient","date","_id","ListItem","Box","flexGrow","Grid","container","spacing","_objectSpread","flexWrap","item","imgWrapper","src","avatarURL","alt","photo","lable","patientName","name","concat","visitInfo","infoWrapp","visitDate","moment","format","btnWrapp","Link","to","Button","variant","onClick","id","clickedVisit","filter","visit","localStorage","setItem","JSON","stringify","handleClick","Divider","borderBottom","PagePagination","numberOfBtnsOnVisitsHistory","handlePageOnVisits"],"sourceRoot":""}