{"version":3,"file":"static/js/978.be4ccc2e.chunk.js","mappings":"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","sources":["components/LinkViewProfile/LinkViewProfile.jsx","webpack://med-doc-front/./src/pages/DoctorMain/ListOfPatients/ListOfPatients.module.css?8d8e","pages/DoctorMain/ListOfPatients/ListOfPatients.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst LinkViewProfile = ({ children, id }) => {\n    return (\n        <Link to={`${id}`}>\n            <Button variant=\"outlined\" color=\"primary\">\n                {children}\n            </Button>\n        </Link>\n    );\n};\n\nexport default LinkViewProfile;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"ListOfPatients_filter__qHovY\",\"filterArrowBox\":\"ListOfPatients_filterArrowBox__gtG1R\",\"filterArrow\":\"ListOfPatients_filterArrow__hjU00\",\"filterFilter\":\"ListOfPatients_filterFilter__bc4ST\",\"patientList\":\"ListOfPatients_patientList__EhaNc\"};","import BasicSelect from 'components/BasicSelect/BasicSelect';\nimport LinkViewProfile from 'components/LinkViewProfile/LinkViewProfile';\nimport { PagePagination, paginationUsers, windowSizePagination } from 'components/PagePagination/PagePagination';\nimport { ProfileBlockPatient } from 'components/ProfileBlockPatient/ProfileBlockPatient';\nimport UsersList from 'components/UsersList/UsersList';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllUsersForRole } from 'redux/info/operation';\nimport css from './ListOfPatients.module.css';\n\nconst ListOfPatients = () => {\n    const [allPatients, setAllPatients] = useState([]);\n    const [filtered, setFiltered] = useState([]);\n    const [pagination, setPagination] = useState([]);\n    const [status, setStatus] = useState('All');\n\n    const [page, setPage] = useState(1);\n    const [limit, setLimit] = useState();\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    const dispatch = useDispatch();\n\n    const frequency = ['All', 'New', 'Permanent'];\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowWidth(window.innerWidth);\n        }\n        windowSizePagination(window.innerWidth, setLimit);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        let limit = null;\n        let limitResult = windowSizePagination(windowWidth, setLimit, limit, 'yes');\n        dispatch(getAllUsersForRole('Patient')).then(({ payload }) => {\n            const result = paginationUsers(payload, limitResult);\n            setAllPatients(payload);\n            setPagination(result);\n        });\n        // eslint-disable-next-line\n    }, [dispatch]);\n\n    useEffect(() => {\n        windowSizePagination(windowWidth, setLimit);\n\n        const result = paginationUsers(filtered, limit);\n        setPagination(result);\n        // eslint-disable-next-line\n    }, [windowWidth]);\n\n    useEffect(() => {\n        let filterDoctor = allPatients;\n\n        if (status !== 'All') {\n            filterDoctor = allPatients.filter(el => el.patientStatus === status);\n        }\n\n        setFiltered(filterDoctor);\n\n        const result = paginationUsers(filterDoctor, limit);\n        setPagination(result);\n        // eslint-disable-next-line\n    }, [allPatients, status]);\n\n    const handlePageOnVisits = data => {\n        setPage(data);\n    };\n\n    const sortDoctors = status => {\n        setStatus(status);\n        // const filterDoctor = allPatients.filter(el => el.patientStatus === status);\n        // const result = paginationDoctors(filterDoctor);\n\n        // setFiltered(result);\n    };\n\n    let numberOfPaginationButton = 0;\n    if (pagination) {\n        numberOfPaginationButton = pagination.length;\n    }\n\n    return (\n        <>\n            <div className={css.filter}>\n                <BasicSelect\n                    title={'Patients'}\n                    filter={frequency}\n                    sortDoctors={sortDoctors}\n                    styles={{ width: '204px' }}\n                />\n            </div>\n            {limit && (\n                <UsersList listOfUsers={pagination[page - 1] || filtered}>\n                    <ProfileBlockPatient>\n                        <LinkViewProfile>view profile</LinkViewProfile>\n                    </ProfileBlockPatient>\n                </UsersList>\n            )}\n            {limit && (\n                <PagePagination\n                    numberOfBtnsOnVisitsHistory={numberOfPaginationButton}\n                    handlePageOnVisits={handlePageOnVisits}\n                />\n            )}\n        </>\n    );\n};\n\nexport default ListOfPatients;\n"],"names":["_ref","children","id","_jsx","Link","to","concat","Button","variant","color","_useState","useState","_useState2","_slicedToArray","allPatients","setAllPatients","_useState3","_useState4","filtered","setFiltered","_useState5","_useState6","pagination","setPagination","_useState7","_useState8","status","setStatus","_useState9","_useState10","page","setPage","_useState11","_useState12","limit","setLimit","_useState13","window","innerWidth","_useState14","windowWidth","setWindowWidth","dispatch","useDispatch","useEffect","handleResize","windowSizePagination","addEventListener","removeEventListener","limitResult","getAllUsersForRole","then","payload","result","paginationUsers","filterDoctor","filter","el","patientStatus","numberOfPaginationButton","length","_jsxs","_Fragment","className","css","BasicSelect","title","sortDoctors","styles","width","UsersList","listOfUsers","ProfileBlockPatient","LinkViewProfile","PagePagination","numberOfBtnsOnVisitsHistory","handlePageOnVisits","data"],"sourceRoot":""}