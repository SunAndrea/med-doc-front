{"version":3,"file":"static/js/199.9c3439b1.chunk.js","mappings":"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","sources":["webpack://med-doc-front/./src/components/ExperienceModal/ExperienceModal.module.css?7ddb","components/ExperienceModal/ExperienceModal.jsx","webpack://med-doc-front/./src/components/ExperienceBlock/ExperienceBlock.module.css?84b2","components/ExperienceBlock/ExperienceBlock.jsx","webpack://med-doc-front/./src/components/AboutBlock/AboutBlock.module.css?8d0e","components/AboutBlock/AboutBlock.jsx","webpack://med-doc-front/./src/components/ModalEditDoctorSpecs/ModalEditDoctorSpecs.module.css?9eff","components/ModalEditDoctorSpecs/ModalEditDoctorSpecs.jsx","webpack://med-doc-front/./src/components/SpecializationBlock/SpecializationBlock.module.css?7e9f","components/SpecializationBlock/SpecializationBlock.jsx","webpack://med-doc-front/./src/components/WeekVisitsBlock/WeekVisitsBlock.module.css?5ffb","components/WeekVisitsBlock/WeekVisitsBlock.jsx","webpack://med-doc-front/./src/pages/DoctorMain/Personal/Personal.module.css?5332","pages/DoctorMain/Personal/Personal.jsx","../node_modules/@mui/icons-material/KeyboardArrowDown.js","../node_modules/@mui/icons-material/KeyboardArrowUp.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ExperienceModal_title__zS9JI\",\"titleWrapp\":\"ExperienceModal_titleWrapp__8gDyc\",\"label\":\"ExperienceModal_label__mf1Mo\",\"formWrapp\":\"ExperienceModal_formWrapp__k0sdr\",\"inputWrapp\":\"ExperienceModal_inputWrapp__OiV2h\"};","import CloseIcon from '@mui/icons-material/Close';\nimport { Box, Input } from '@mui/material';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DemoItem } from '@mui/x-date-pickers/internals/demo';\nimport dayjs from 'dayjs';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectInstitution } from 'redux/info/selectors';\nimport { addUserExperience, getAllInstitution, updateUserExperience } from '../../redux/info/operation';\nimport css from './ExperienceModal.module.css';\n\nconst buttonStyle = {\n    padding: { xs: '12px 24px', md: '13px 32px' },\n};\n\nconst modalProperty = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    bgcolor: 'background.main',\n    outline: 'none',\n    borderRadius: '16px',\n    p: { sm: '20px', md: '32px' },\n    maxWidth: { sm: '335px', md: '500px' },\n    width: '100%',\n};\n\nconst inputStyles = {\n    '.MuiOutlinedInput-root ': {\n        padding: '14px 18px',\n        borderRadius: '8px',\n        '& .MuiAutocomplete-input': { padding: '0px' },\n    },\n};\n\nconst datePickerStyles = {\n    '& .MuiOutlinedInput-root': {\n        borderRadius: '8px',\n    },\n};\n\nexport const ExperienceModal = ({ open, setModalOpen, title, id }) => {\n    const [selectedStartDate, setSelectedStartDate] = useState(dayjs());\n    const [selectedEndDate, setSelectedEndDate] = useState(dayjs());\n    const [selectedInstitution, setSelectedInstitution] = useState(null);\n    const [description, setDescription] = useState('');\n    const dispatch = useDispatch();\n    const institution = useSelector(selectInstitution);\n\n    useEffect(() => {\n        dispatch(getAllInstitution());\n    }, [dispatch]);\n\n    const handleKeyDown = event => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            event.target.value += '\\n';\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (!selectedInstitution && !description) {\n            alert('Institution is not selected!');\n            return;\n        }\n\n        const addData = {\n            institution: selectedInstitution.name,\n            description: description,\n            startDate: selectedStartDate.format('MM.DD.YYYY'),\n            endDate: selectedEndDate.format('MM.DD.YYYY'),\n            institutionLogo: selectedInstitution.image,\n        };\n\n        const updateData = {\n            id,\n            institution: selectedInstitution.name,\n            description: description,\n            startDate: selectedStartDate.format('MM.DD.YYYY'),\n            endDate: selectedEndDate.format('MM.DD.YYYY'),\n            institutionLogo: selectedInstitution.image,\n        };\n\n        title === 'Add experience' ? dispatch(addUserExperience(addData)) : dispatch(updateUserExperience(updateData));\n\n        setSelectedStartDate(dayjs());\n        setSelectedEndDate(dayjs());\n        setSelectedInstitution(null);\n        setDescription('');\n        setModalOpen(!open);\n    };\n\n    return (\n        <Modal open={open} onClose={() => setModalOpen()}>\n            <Box sx={modalProperty}>\n                <div className={css.titleWrapp}>\n                    <p className={css.title}>{title}</p>\n                    <IconButton\n                        aria-label=\"close modal\"\n                        onClick={() => setModalOpen()}\n                        sx={{ '&:hover, &:focus': { background: '#EDF5F5' } }}\n                    >\n                        <CloseIcon\n                            sx={{\n                                fill: 'black',\n                                width: '24px',\n                                height: '24px',\n                            }}\n                        />\n                    </IconButton>\n                </div>\n                <form onSubmit={handleSubmit}>\n                    <ul className={css.formWrapp}>\n                        <li className={css.inputWrapp}>\n                            <p htmlFor=\"combo-box-demo\" className={css.label}>\n                                Institution\n                            </p>\n                            <Autocomplete\n                                disablePortal\n                                id=\"combo-box-demo\"\n                                options={institution ? institution : []}\n                                value={selectedInstitution}\n                                onChange={(event, value) => {\n                                    setSelectedInstitution(value);\n                                }}\n                                sx={{ width: '100%' }}\n                                getOptionLabel={option => option.name}\n                                renderInput={params => (\n                                    <TextField {...params} sx={inputStyles} placeholder=\"Enter your text\" />\n                                )}\n                            />\n                        </li>\n                        <li className={css.inputWrapp}>\n                            <p className={css.label}>Description</p>\n                            <Input\n                                variant=\"primary\"\n                                color=\"primary\"\n                                type=\"text\"\n                                value={description}\n                                onChange={event => {\n                                    setDescription(event.target.value);\n                                }}\n                                onKeyDown={handleKeyDown}\n                                multiline\n                                disableUnderline\n                            />\n                        </li>\n                        <li className={css.inputWrapp}>\n                            <p className={css.label}>Start date</p>\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                <DemoItem components={['DatePicker']}>\n                                    <DatePicker\n                                        sx={{ width: '100%', ...datePickerStyles }}\n                                        value={selectedStartDate}\n                                        onChange={date => {\n                                            setSelectedStartDate(date);\n                                        }}\n                                    />\n                                </DemoItem>\n                            </LocalizationProvider>\n                        </li>\n                        <li>\n                            <p className={css.label}>End date</p>\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                <DemoItem components={['DatePicker']}>\n                                    <DatePicker\n                                        sx={{ width: '100%', ...datePickerStyles }}\n                                        value={selectedEndDate}\n                                        onChange={date => {\n                                            setSelectedEndDate(date);\n                                        }}\n                                    />\n                                </DemoItem>\n                            </LocalizationProvider>\n                        </li>\n                    </ul>\n\n                    <Button variant=\"contained\" color=\"secondary\" type=\"submit\" sx={buttonStyle} disableElevation>\n                        save\n                    </Button>\n                </form>\n            </Box>\n        </Modal>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"experienceBlock\":\"ExperienceBlock_experienceBlock__yrdGc\",\"experienceTitleWrapper\":\"ExperienceBlock_experienceTitleWrapper__pCEHh\",\"experienceTitle\":\"ExperienceBlock_experienceTitle__CU-VK\",\"experienceAdd\":\"ExperienceBlock_experienceAdd__vFSIh\",\"experienceList\":\"ExperienceBlock_experienceList__LMBky\",\"experienceListItem\":\"ExperienceBlock_experienceListItem__SBTCF\",\"experienceItemWrapper\":\"ExperienceBlock_experienceItemWrapper__TLtJR\",\"experienceImage\":\"ExperienceBlock_experienceImage__9IYfx\",\"plugLogo\":\"ExperienceBlock_plugLogo__aplVp\",\"image\":\"ExperienceBlock_image__VcNkK\",\"experienceInfoTitle\":\"ExperienceBlock_experienceInfoTitle__sqUPK\",\"experienceInfoDate\":\"ExperienceBlock_experienceInfoDate__omk56\",\"experienceInfoAbout\":\"ExperienceBlock_experienceInfoAbout__qQUFn\",\"buttonEditWrapper\":\"ExperienceBlock_buttonEditWrapper__XrheP\",\"buttonEdit\":\"ExperienceBlock_buttonEdit__xmWjH\",\"experienceInfoDateFlex\":\"ExperienceBlock_experienceInfoDateFlex__+U0LM\"};","import { UilTrashAlt } from '@iconscout/react-unicons';\nimport AddIcon from '@mui/icons-material/Add';\nimport { IconButton } from '@mui/material';\nimport { ExperienceModal } from 'components/ExperienceModal/ExperienceModal';\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { RxPencil1 } from 'react-icons/rx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { deleteUserExperience } from 'redux/info/operation';\nimport { selectUserInfo } from 'redux/info/selectors';\nimport experienceImg from '../../Image/Experience1.png';\nimport css from './ExperienceBlock.module.css';\n\nexport const ExperienceBlock = () => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [title, setTitle] = useState('');\n    const [modalId, setModalId] = useState(null);\n\n    const doctorId = useSelector(selectUserInfo)?._id;\n    const { id } = useParams();\n    const personalLoc = doctorId === id;\n    const doctorInfo = useSelector(selectUserInfo);\n\n    const dispatch = useDispatch();\n\n    const handleModalChange = (currentTitle, _id) => {\n        setModalOpen(!modalOpen);\n        setTitle(currentTitle);\n\n        _id ? setModalId(_id) : setModalId(null);\n    };\n\n    return (\n        <div className={css.experienceBlock}>\n            <div className={css.experienceTitleWrapper}>\n                <h2 className={css.experienceTitle}>Experience </h2>\n                {personalLoc && (\n                    <IconButton sx={{ padding: '0' }} onClick={() => handleModalChange('Add experience')}>\n                        <AddIcon sx={{ color: '#477577' }} />\n                    </IconButton>\n                )}\n            </div>\n            <ul className={css.experienceList}>\n                {doctorInfo.experience.map(\n                    ({ institution, description, startDate, endDate, _id, institutionLogo }, index) => {\n                        return (\n                            <li key={index} className={css.experienceListItem}>\n                                <div className={css.experienceItemWrapper}>\n                                    <div className={institutionLogo ? css.experienceImage : css.plugLogo}>\n                                        <img\n                                            className={css.image}\n                                            src={institutionLogo ? institutionLogo : experienceImg}\n                                            alt=\"Logo\"\n                                        />\n                                    </div>\n                                    <div className={css.experienceInfoItem}>\n                                        <p className={css.experienceInfoTitle}>{institution}</p>\n                                        <p className={css.experienceInfoDate}>\n                                            {moment(startDate).format('MMMM YYYY')} -\n                                            {moment(endDate).format('MMMM YYYY')}\n                                        </p>\n\n                                        <p className={css.experienceInfoAbout}>{description}</p>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                    <div className={css.buttonEditWrapper}>\n                                        <p className={css.experienceInfoDateFlex}>\n                                            {moment(startDate).format('MMMM YYYY')} -\n                                            {moment(endDate).format('MMMM YYYY')}\n                                        </p>\n\n                                        {personalLoc && (\n                                            <IconButton\n                                                sx={{ padding: '0', marginBottom: '12px' }}\n                                                onClick={() => {\n                                                    handleModalChange('Edit experience', _id);\n                                                }}\n                                            >\n                                                <RxPencil1 style={{ color: '#477577' }} />\n                                            </IconButton>\n                                        )}\n                                    </div>\n                                    {personalLoc && (\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                                            <IconButton\n                                                size=\"small\"\n                                                sx={{ padding: '0', justifyContent: 'flex-end', marginLeft: 'auto' }}\n                                                onClick={() => dispatch(deleteUserExperience(_id))}\n                                            >\n                                                <UilTrashAlt style={{ color: '#477577', fontSize: '18px' }} />\n                                            </IconButton>\n                                        </div>\n                                    )}\n                                </div>\n                            </li>\n                        );\n                    }\n                )}\n            </ul>\n            <ExperienceModal\n                doctorInfo={doctorInfo}\n                open={modalOpen}\n                setModalOpen={handleModalChange}\n                title={title}\n                id={modalId}\n            />\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"aboutBlockHeadWrapper\":\"AboutBlock_aboutBlockHeadWrapper__cJtkJ\",\"aboutTitle\":\"AboutBlock_aboutTitle__aLF4c\",\"aboutWrapper\":\"AboutBlock_aboutWrapper__f3Z4F\",\"aboutDot\":\"AboutBlock_aboutDot__kmXJh\",\"aboutText\":\"AboutBlock_aboutText__Qtf9m\",\"aboutArrowIcon\":\"AboutBlock_aboutArrowIcon__sucFP\"};","import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport IconButton from '@mui/material/IconButton';\nimport React, { useState } from 'react';\nimport css from './AboutBlock.module.css';\n\nexport const AboutBlock = ({ about }) => {\n    const [isVisitsVisible, setIsVisitsVisible] = useState(true);\n\n    const handleArrowClick = () => {\n        setIsVisitsVisible(!isVisitsVisible);\n    };\n\n    return (\n        <>\n            {about && (\n                <div className={css.aboutBlock}>\n                    <div className={css.aboutBlockHeadWrapper}>\n                        <h2 className={css.aboutTitle}>About </h2>\n                        <div className={css.aboutArrowIcon}>\n                            {!isVisitsVisible && (\n                                <IconButton sx={{ padding: '0' }} onClick={handleArrowClick}>\n                                    <KeyboardArrowDownIcon sx={{ color: '#111111', fontSize: '28px' }} />\n                                </IconButton>\n                            )}\n                            {isVisitsVisible && (\n                                <IconButton sx={{ padding: '0' }} onClick={handleArrowClick}>\n                                    <KeyboardArrowUpIcon sx={{ color: '#111111', fontSize: '28px' }} />\n                                </IconButton>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className={css.aboutWrapper}>\n                        {isVisitsVisible && (\n                            <>\n                                <svg\n                                    className={css.aboutDot}\n                                    width=\"8\"\n                                    height=\"8\"\n                                    viewBox=\"0 0 8 8\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"#477577\" />\n                                </svg>\n\n                                <p className={css.aboutText}>{about}</p>\n                            </>\n                        )}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"titleWrapper\":\"ModalEditDoctorSpecs_titleWrapper__z2DnM\",\"label\":\"ModalEditDoctorSpecs_label__mc6-M\"};","import CloseIcon from '@mui/icons-material/Close';\nimport { Box, IconButton, InputLabel, Modal, Typography } from '@mui/material';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserInfo } from 'redux/info/operation';\nimport css from './ModalEditDoctorSpecs.module.css';\nimport { selectUserInfo } from 'redux/info/selectors';\nconst specializations = [\n    'Cardiologist',\n    'Dermatologist',\n    'Endocrinologist',\n    'Gastroenterologist',\n    'Hematologist',\n    'Neurologist',\n    'Obstetrician',\n    'Oncologist',\n    'Ophthalmologist',\n    'Orthopedist',\n    'Otolaryngologist',\n    'Pediatrician',\n    'Psychiatrist',\n    'Radiologist',\n    'Urologist',\n];\nconst categories = ['The First', 'The Second', 'Higher'];\nconst modalProperty = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    bgcolor: 'background.main',\n    outline: 'none',\n    borderRadius: '16px',\n    p: { sm: '20px', md: '32px' },\n    maxWidth: { sm: '335px', md: '500px' },\n    width: '100%',\n};\n\nexport const ModalEditDoctorSpecs = ({ open, setOpen }) => {\n    const userInfo = useSelector(selectUserInfo);\n    const [specialization, setSpecialization] = useState(userInfo.specialization);\n    const [category, setCategory] = useState(userInfo.category);\n    const dispatch = useDispatch();\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const data = {\n            specialization,\n            category,\n        };\n\n        dispatch(updateUserInfo(data));\n\n        setCategory(null);\n        setSpecialization(null);\n        setOpen(!open);\n    };\n\n    return (\n        <Modal open={open} onClose={() => setOpen(!open)}>\n            <Box sx={modalProperty}>\n                <div className={css.titleWrapper}>\n                    <Typography\n                        variant=\"subtitle\"\n                        component=\"p\"\n                        color=\"text.black\"\n                        sx={{ fontSize: { md: '20px' }, lineHeight: { md: 1.5 } }}\n                    >\n                        Edit data\n                    </Typography>\n                    <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n                        <CloseIcon sx={{ width: '24px', height: '24px', color: 'text.black' }} />\n                    </IconButton>\n                </div>\n                <form className={css.formWrapper} onSubmit={handleSubmit}>\n                    <ul>\n                        <li>\n                            <InputLabel variant=\"standard\" color=\"primary\" sx={{ mb: '8px' }}>\n                                Specialization\n                            </InputLabel>\n                            <Autocomplete\n                                disablePortal\n                                id=\"combo-box-demo\"\n                                options={specializations}\n                                sx={{\n                                    '& .MuiOutlinedInput-root .MuiAutocomplete-input': { padding: '0', height: '28px' },\n                                    marginBottom: { sm: '14px', md: '16px' },\n                                }}\n                                value={specialization}\n                                onChange={(evt, value) => setSpecialization(value)}\n                                renderInput={params => <TextField {...params} />}\n                            />\n                        </li>\n                        <li>\n                            <InputLabel variant=\"standard\" color=\"primary\" sx={{ mb: '8px' }}>\n                                Category\n                            </InputLabel>\n                            <Autocomplete\n                                disablePortal\n                                id=\"combo-box-demo\"\n                                options={categories}\n                                sx={{\n                                    '& .MuiOutlinedInput-root .MuiAutocomplete-input': {\n                                        padding: '0',\n                                        height: '28px',\n                                    },\n                                    marginBottom: { sm: '20px', md: '32px' },\n                                }}\n                                value={category}\n                                onChange={(evt, value) => setCategory(value)}\n                                renderInput={params => <TextField {...params} />}\n                            />\n                        </li>\n                    </ul>\n\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        disableElevation\n                        sx={{ p: { md: '13px 32px' } }}\n                    >\n                        save\n                    </Button>\n                </form>\n            </Box>\n        </Modal>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"specializationBlock\":\"SpecializationBlock_specializationBlock__IdPO9\",\"specializationItem\":\"SpecializationBlock_specializationItem__Osrjq\",\"specializationText\":\"SpecializationBlock_specializationText__cdgov\"};","import { IconButton } from '@mui/material';\nimport { ModalEditDoctorSpecs } from 'components/ModalEditDoctorSpecs/ModalEditDoctorSpecs';\nimport { useState } from 'react';\nimport { RxPencil1 } from 'react-icons/rx';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { selectUserInfo } from 'redux/info/selectors';\nimport css from './SpecializationBlock.module.css';\n\nexport const SpecializationBlock = ({ specialization, category }) => {\n    const [open, setOpen] = useState(false);\n\n    const doctorId = useSelector(selectUserInfo)?._id;\n    const { id } = useParams();\n    const personalLoc = doctorId === id;\n\n    return (\n        <div className={css.specializationBlock}>\n            <ul className={css.specializationList}>\n                <li className={css.specializationItem}>\n                    Specialization:<span className={css.specializationText}>{specialization}</span>\n                </li>\n                <li className={css.specializationItem}>\n                    Category:\n                    <span className={css.specializationText}>{category}</span>\n                </li>\n            </ul>\n            {personalLoc && (\n                <>\n                    <IconButton\n                        onClick={() => setOpen(!open)}\n                        sx={{ position: 'absolute', top: '16px', right: '16px' }}\n                    >\n                        <RxPencil1 style={{ color: '#477577' }} />\n                    </IconButton>\n                    <ModalEditDoctorSpecs open={open} setOpen={setOpen} />\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"weekVisitsBlock\":\"WeekVisitsBlock_weekVisitsBlock__SoCCy\",\"weekVisitsTitleWrapper\":\"WeekVisitsBlock_weekVisitsTitleWrapper__5v3jE\",\"weekVisitsTitle\":\"WeekVisitsBlock_weekVisitsTitle__dFpP5\",\"weekVisitsCalendar\":\"WeekVisitsBlock_weekVisitsCalendar__vTk4h\",\"weekVisitsCalendarButtonContainer\":\"WeekVisitsBlock_weekVisitsCalendarButtonContainer__tdH18\",\"weekVisitAvatar\":\"WeekVisitsBlock_weekVisitAvatar__wRWpS\",\"weekVisitItemInfo\":\"WeekVisitsBlock_weekVisitItemInfo__FfQJb\",\"modalWeekVisitItemInfo\":\"WeekVisitsBlock_modalWeekVisitItemInfo__2zEq+\",\"weekVisitsName\":\"WeekVisitsBlock_weekVisitsName__AVWU5\",\"weekVisitsNameCategory\":\"WeekVisitsBlock_weekVisitsNameCategory__ceUYi\",\"modalWeekVisitsNameCategory\":\"WeekVisitsBlock_modalWeekVisitsNameCategory__HzcgH\",\"weekVisitsDateTitle\":\"WeekVisitsBlock_weekVisitsDateTitle__AyUfo\",\"weekVisitItem\":\"WeekVisitsBlock_weekVisitItem__Pqbqn\",\"weekVisitsDateInfoWrapper\":\"WeekVisitsBlock_weekVisitsDateInfoWrapper__7Pyls\",\"weekVisitsDateContainer\":\"WeekVisitsBlock_weekVisitsDateContainer__5vyrz\",\"weekVisitsDate\":\"WeekVisitsBlock_weekVisitsDate__+0PFd\",\"weekVisitsTimeContainer\":\"WeekVisitsBlock_weekVisitsTimeContainer__ZAM5Q\",\"weekVisitsTime\":\"WeekVisitsBlock_weekVisitsTime__iyzcx\",\"weekVisitsBlockFlexWrapper\":\"WeekVisitsBlock_weekVisitsBlockFlexWrapper__C9SY4\",\"modalWeekVisit\":\"WeekVisitsBlock_modalWeekVisit__dOBAg\",\"modalWeekVisitsTitleWrapper\":\"WeekVisitsBlock_modalWeekVisitsTitleWrapper__qzynV\",\"modalWeekVisitsTitle\":\"WeekVisitsBlock_modalWeekVisitsTitle__+GBM+\",\"modalNameFlex\":\"WeekVisitsBlock_modalNameFlex__5-hy6\",\"weekVisitProfile\":\"WeekVisitsBlock_weekVisitProfile__PMtTP\",\"modalWeekVisitItemInfoText\":\"WeekVisitsBlock_modalWeekVisitItemInfoText__LFR1c\"};","import CloseIcon from '@mui/icons-material/Close';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { Modal } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Card from 'components/Card/Card';\nimport { DatePickers } from 'components/DatePickers/DatePickers';\nimport dayjs from 'dayjs';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentUserAppointments } from 'redux/appointment/operation';\nimport Avatar from '../../Image/Avatar.png';\nimport css from './WeekVisitsBlock.module.css';\n\nexport const WeekVisitsBlock = () => {\n  const [selectedDate, setSelectedDate] = useState(\n    dayjs().format('MM.DD.YYYY')\n  );\n  const [isVisitsVisible, setIsVisitsVisible] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState('');\n  const [dateVisits, setDateVisits] = useState([]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUserAppointments()).then(data => {\n      setDateVisits(data.payload);\n    });\n  }, [dispatch]);\n\n  const filteredArray = dateVisits?.filter(\n    item => moment(item.date).format('MM.DD.YYYY') === selectedDate\n  );\n\n  const handleDateChange = formattedDate => {\n    setSelectedDate(formattedDate);\n  };\n\n  const handleArrowClick = () => {\n    setIsVisitsVisible(!isVisitsVisible);\n  };\n\n  const handleClick = item => {\n    setSelectedItem(item);\n    setOpen(true);\n  };\n\n  return (\n    <Card>\n      <div className={css.weekVisitsBlockFlexWrapper}>\n        <div className={css.weekVisitsTitleWrapper}>\n          <p className={css.weekVisitsTitle}>Visits for a week </p>\n        </div>\n        <div className={css.weekVisitsCalendar}>\n          <div>\n            <DatePickers\n              value={selectedDate}\n              onDateSelected={handleDateChange}\n            />\n          </div>\n\n          {!isVisitsVisible && (\n            <IconButton\n              sx={{ padding: '0', marginLeft: '32px' }}\n              onClick={handleArrowClick}\n            >\n              <KeyboardArrowDownIcon\n                sx={{ fontSize: '28px', color: '#111111' }}\n              />\n            </IconButton>\n          )}\n          {isVisitsVisible && (\n            <IconButton\n              sx={{ padding: '0', marginLeft: '32px' }}\n              onClick={handleArrowClick}\n            >\n              <KeyboardArrowUpIcon\n                sx={{ fontSize: '28px', color: '#111111' }}\n              />\n            </IconButton>\n          )}\n        </div>\n      </div>\n\n      {isVisitsVisible && filteredArray.length > 0 && (\n        <div>\n          <ul className={css.weekVisitList}>\n            {filteredArray.map(({ _id, date, patient, time }, index, array) => {\n              return (\n                <li\n                  key={_id}\n                  className={css.weekVisitItem}\n                  onClick={() => handleClick({ date, patient, time })}\n                >\n                  <div className={css.weekVisitItemInfo}>\n                    <img\n                      className={css.weekVisitAvatar}\n                      src={patient.avatarURL}\n                      alt=\"avatar\"\n                    />\n                    <div>\n                      <p className={css.weekVisitsName}>{patient.name}</p>\n                      <p className={css.weekVisitsNameCategory}>Patient</p>\n                    </div>\n                  </div>\n\n                  <div>\n                    <p className={css.weekVisitsDateTitle}>Date of visit</p>\n\n                    <div className={css.weekVisitsDateInfoWrapper}>\n                      <div className={css.weekVisitsDateContainer}>\n                        <p className={css.weekVisitsDate}>\n                          {moment(date).format('MMMM MM/DD/YYYY')}\n                        </p>\n                      </div>\n\n                      <div className={css.weekVisitsTimeContainer}>\n                        <p className={css.weekVisitsTime}>{time}</p>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div className={css.modalWeekVisit}>\n          <div className={css.modalWeekVisitsTitleWrapper}>\n            <p className={css.modalWeekVisitsTitle}>Doctor's appointment </p>\n            <IconButton onClick={() => setOpen(false)}>\n              <CloseIcon sx={{ minWidth: '12px', color: '#111111' }} />\n            </IconButton>\n          </div>\n          {selectedItem && (\n            <div className={css.modalWeekVisitItemInfo}>\n              <img\n                className={css.weekVisitAvatar}\n                src={\n                  selectedItem.patient.avatarURL\n                    ? selectedItem.patient.avatarURL\n                    : { Avatar }\n                }\n                alt=\"avatar\"\n              />\n              <div className={css.weekVisitProfile}>\n                <div className={css.modalNameFlex}>\n                  <p className={css.weekVisitsName}>\n                    {selectedItem.patient.name}\n                  </p>\n                  <p className={css.modalWeekVisitsNameCategory}>Patient</p>\n                </div>\n                <ul>\n                  <li className={css.modalWeekVisitItemInfo}>\n                    Gender:\n                    <p className={css.modalWeekVisitItemInfoText}>\n                      {selectedItem.patient.gender\n                        ? selectedItem.patient.gender\n                        : ''}\n                    </p>\n                  </li>\n                  <li className={css.modalWeekVisitItemInfo}>\n                    Date of birth:\n                    <p className={css.modalWeekVisitItemInfoText}>\n                      {moment(selectedItem.patient.birthday).format(\n                        'MM/DD/YYYY'\n                      )\n                        ? moment(selectedItem.patient.birthday).format(\n                            'MM/DD/YYYY'\n                          )\n                        : ''}\n                    </p>\n                  </li>\n                  <li className={css.modalWeekVisitItemInfo}>\n                    Phone number:\n                    <p className={css.modalWeekVisitItemInfoText}>\n                      {selectedItem.patient.number}\n                    </p>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          )}\n\n          <div>\n            <p className={css.weekVisitsDateTitle}>Date of visit</p>\n\n            <div className={css.weekVisitsDateInfoWrapper}>\n              <div className={css.weekVisitsDateContainer}>\n                <p className={css.weekVisitsDate}>\n                  {moment(selectedItem.date).format('MMMM MM/DD/YYYY')}\n                </p>\n              </div>\n\n              <div className={css.weekVisitsTimeContainer}>\n                <p className={css.weekVisitsTime}>{selectedItem.time}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </Card>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"DoctorInformation\":\"Personal_DoctorInformation__H3K2H\",\"pageAboutBlockWrapper\":\"Personal_pageAboutBlockWrapper__8iv3Z\"};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { ExperienceBlock } from 'components/ExperienceBlock/ExperienceBlock';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { selectUserInfoById } from 'redux/info/selectors';\n\nimport { AboutBlock } from 'components/AboutBlock/AboutBlock';\nimport { ProfileBlockDoctore } from 'components/ProfileBlockDoctore/ProfileBlockDoctore';\nimport { SpecializationBlock } from 'components/SpecializationBlock/SpecializationBlock';\nimport { WeekVisitsBlock } from 'components/WeekVisitsBlock/WeekVisitsBlock';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getUserInfoById } from 'redux/info/operation';\nimport { selectUserInfo } from 'redux/info/selectors';\nimport css from './Personal.module.css';\n\nconst Personal = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const location = useLocation().pathname;\n    const doctorInfo = useSelector(selectUserInfo);\n    const colleagueInfo = useSelector(selectUserInfoById);\n\n    useEffect(() => {\n        dispatch(getUserInfoById(id));\n    }, [dispatch, id]);\n\n    return (\n        <>\n            {doctorInfo && (\n                <>\n                    {location.startsWith('/doctor/personal') && (\n                        <>\n                            <div className={css.DoctorInformation}>\n                                <ProfileBlockDoctore userInfo={doctorInfo} />\n                                <SpecializationBlock\n                                    specialization={doctorInfo.specialization}\n                                    category={doctorInfo.category}\n                                />\n                            </div>\n                            <div className={css.pageAboutBlock}>\n                                <div className={css.pageAboutBlockWrapper}>\n                                    <AboutBlock about={doctorInfo.about} />\n                                    <ExperienceBlock doctorInfo={doctorInfo} />\n                                </div>\n\n                                <WeekVisitsBlock />\n                            </div>\n                        </>\n                    )}\n                    {location.startsWith('/doctor/colleuges') && (\n                        <>\n                            <div className={css.DoctorInformation}>\n                                <ProfileBlockDoctore userInfo={colleagueInfo} />\n                                <SpecializationBlock\n                                    specialization={colleagueInfo.specialization}\n                                    category={colleagueInfo.category}\n                                />\n                            </div>\n                            <div className={css.pageAboutBlock}>\n                                <div className={css.pageAboutBlockWrapper}>\n                                    <AboutBlock about={colleagueInfo.about} />\n                                    <ExperienceBlock doctorInfo={colleagueInfo} />\n                                </div>\n\n                                <WeekVisitsBlock />\n                            </div>\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Personal;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\nexports.default = _default;"],"names":["buttonStyle","padding","xs","md","modalProperty","position","top","left","transform","bgcolor","outline","borderRadius","p","sm","maxWidth","width","inputStyles","datePickerStyles","ExperienceModal","_ref","open","setModalOpen","title","id","_useState","useState","dayjs","_useState2","_slicedToArray","selectedStartDate","setSelectedStartDate","_useState3","_useState4","selectedEndDate","setSelectedEndDate","_useState5","_useState6","selectedInstitution","setSelectedInstitution","_useState7","_useState8","description","setDescription","dispatch","useDispatch","institution","useSelector","selectInstitution","useEffect","getAllInstitution","_jsx","Modal","onClose","children","_jsxs","Box","sx","className","css","IconButton","onClick","background","CloseIcon","fill","height","onSubmit","event","preventDefault","addData","name","startDate","format","endDate","institutionLogo","image","updateData","addUserExperience","updateUserExperience","alert","htmlFor","Autocomplete","disablePortal","options","value","onChange","getOptionLabel","option","renderInput","params","TextField","_objectSpread","placeholder","Input","variant","color","type","target","onKeyDown","key","multiline","disableUnderline","LocalizationProvider","dateAdapter","AdapterDayjs","DemoItem","components","DatePicker","date","Button","disableElevation","ExperienceBlock","_useSelector","modalOpen","setTitle","modalId","setModalId","personalLoc","selectUserInfo","_id","useParams","doctorInfo","handleModalChange","currentTitle","experienceBlock","experienceTitleWrapper","experienceTitle","AddIcon","experienceList","experience","map","index","experienceListItem","experienceItemWrapper","experienceImage","plugLogo","src","alt","experienceInfoItem","experienceInfoTitle","experienceInfoDate","moment","experienceInfoAbout","style","display","flexDirection","buttonEditWrapper","experienceInfoDateFlex","marginBottom","RxPencil1","alignItems","size","justifyContent","marginLeft","deleteUserExperience","UilTrashAlt","fontSize","AboutBlock","about","isVisitsVisible","setIsVisitsVisible","handleArrowClick","_Fragment","aboutBlock","aboutBlockHeadWrapper","aboutTitle","aboutArrowIcon","KeyboardArrowDownIcon","KeyboardArrowUpIcon","aboutWrapper","aboutDot","viewBox","xmlns","cx","cy","r","aboutText","specializations","categories","ModalEditDoctorSpecs","setOpen","userInfo","specialization","setSpecialization","category","setCategory","titleWrapper","Typography","component","lineHeight","formWrapper","evt","data","updateUserInfo","InputLabel","mb","SpecializationBlock","specializationBlock","specializationList","specializationItem","specializationText","right","WeekVisitsBlock","selectedDate","setSelectedDate","selectedItem","setSelectedItem","_useState9","_useState10","dateVisits","setDateVisits","getCurrentUserAppointments","then","payload","filteredArray","filter","item","Card","weekVisitsBlockFlexWrapper","weekVisitsTitleWrapper","weekVisitsTitle","weekVisitsCalendar","DatePickers","onDateSelected","formattedDate","length","weekVisitList","array","patient","time","weekVisitItem","weekVisitItemInfo","weekVisitAvatar","avatarURL","weekVisitsName","weekVisitsNameCategory","weekVisitsDateTitle","weekVisitsDateInfoWrapper","weekVisitsDateContainer","weekVisitsDate","weekVisitsTimeContainer","weekVisitsTime","modalWeekVisit","modalWeekVisitsTitleWrapper","modalWeekVisitsTitle","minWidth","modalWeekVisitItemInfo","Avatar","weekVisitProfile","modalNameFlex","modalWeekVisitsNameCategory","modalWeekVisitItemInfoText","gender","birthday","number","location","useLocation","pathname","colleagueInfo","selectUserInfoById","getUserInfoById","startsWith","DoctorInformation","ProfileBlockDoctore","pageAboutBlock","pageAboutBlockWrapper","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}